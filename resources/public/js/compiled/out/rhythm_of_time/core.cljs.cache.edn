{:use-macros nil, :excludes #{}, :name rhythm-of-time.core, :imports nil, :requires {seq rhythm-of-time.sequencer, rhythm-of-time.sequencer rhythm-of-time.sequencer}, :uses nil, :defs {app-state {:name rhythm-of-time.core/app-state, :file "src/rhythm_of_time/core.cljs", :line 12, :column 1, :end-line 12, :end-column 19, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/core.cljs", :line 12, :column 10, :end-line 12, :end-column 19}}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/core.cljs", :line 15, :column 7, :end-line 15, :end-column 19, :arglists (quote ([]))}, :name rhythm-of-time.core/on-js-reload, :variadic false, :file "src/rhythm_of_time/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:text}, :order [:text]}, :doc nil}