{:name rhythm-of-time.synthesizer, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {bach cljs-bach.synthesis, cljs-bach.synthesis cljs-bach.synthesis}, :imports nil, :defs {context {:name rhythm-of-time.synthesizer/context, :file "src/rhythm_of_time/synthesizer.cljs", :line 5, :column 1, :end-line 5, :end-column 17, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/synthesizer.cljs", :line 5, :column 10, :end-line 5, :end-column 17}}, ping-sine {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/synthesizer.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([freq gain]))}, :name rhythm-of-time.synthesizer/ping-sine, :variadic false, :file "src/rhythm_of_time/synthesizer.cljs", :end-column 16, :method-params ([freq gain]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([freq gain]))}, ping-saw {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/synthesizer.cljs", :line 14, :column 7, :end-line 14, :end-column 15, :arglists (quote ([freq gain]))}, :name rhythm-of-time.synthesizer/ping-saw, :variadic false, :file "src/rhythm_of_time/synthesizer.cljs", :end-column 15, :method-params ([freq gain]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([freq gain]))}, ping! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/synthesizer.cljs", :line 22, :column 7, :end-line 22, :end-column 12, :arglists (quote ([hertz gain type]))}, :name rhythm-of-time.synthesizer/ping!, :variadic false, :file "src/rhythm_of_time/synthesizer.cljs", :end-column 12, :method-params ([hertz gain type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([hertz gain type]))}}}