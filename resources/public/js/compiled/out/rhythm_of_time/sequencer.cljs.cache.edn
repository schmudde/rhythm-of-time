{:use-macros nil, :excludes #{}, :name rhythm-of-time.sequencer, :imports nil, :requires {q quil.core, cntrl rhythm-of-time.controls, rhythm-of-time.quil-js-api rhythm-of-time.quil-js-api, rhythm-of-time.synthesizer rhythm-of-time.synthesizer, js-api rhythm-of-time.quil-js-api, m quil.middleware, quil.core quil.core, quil.middleware quil.middleware, synth rhythm-of-time.synthesizer, rhythm-of-time.controls rhythm-of-time.controls, cljs.reader cljs.reader, reader cljs.reader}, :uses nil, :defs {draw-state {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 119, :column 7, :end-line 119, :end-column 17, :arglists (quote ([state]))}, :name rhythm-of-time.sequencer/draw-state, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, update-state {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 44, :column 7, :end-line 44, :end-column 19, :arglists (quote ([state]))}, :name rhythm-of-time.sequencer/update-state, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, draw-stroke! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([weight green-value x y width height]))}, :name rhythm-of-time.sequencer/draw-stroke!, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 19, :method-params ([weight green-value x y width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 6, :fn-var true, :arglists (quote ([weight green-value x y width height]))}, sequencer {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 135, :column 14, :end-line 135, :end-column 23, :export true, :arglists (quote ([]))}, :name rhythm-of-time.sequencer/sequencer, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, gain-value {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 90, :column 7, :end-line 90, :end-column 17, :arglists (quote ([audio-on-off]))}, :name rhythm-of-time.sequencer/gain-value, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 17, :method-params ([audio-on-off]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([audio-on-off]))}, advance? {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 25, :column 7, :end-line 25, :end-column 15, :arglists (quote ([tempo]))}, :name rhythm-of-time.sequencer/advance?, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 15, :method-params ([tempo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tempo]))}, frame-rate-scaler {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 18, :column 7, :end-line 18, :end-column 24, :arglists (quote ([tempo]))}, :name rhythm-of-time.sequencer/frame-rate-scaler, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 24, :method-params ([tempo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tempo]))}, draw-stage! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 102, :column 7, :end-line 102, :end-column 18, :arglists (quote ([stage position-x position-y]))}, :name rhythm-of-time.sequencer/draw-stage!, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 18, :method-params ([stage position-x position-y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 3, :fn-var true, :arglists (quote ([stage position-x position-y]))}, browser-detection {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 133, :column 7, :end-line 133, :end-column 24, :arglists (quote ([]))}, :name rhythm-of-time.sequencer/browser-detection, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([]))}, :name rhythm-of-time.sequencer/setup, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stage-value {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 86, :column 7, :end-line 86, :end-column 18, :arglists (quote ([stage-state]))}, :name rhythm-of-time.sequencer/stage-value, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 18, :method-params ([stage-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stage-state]))}, advancer {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :line 31, :column 7, :end-line 31, :end-column 15, :arglists (quote ([stages frequency-list-i frequency-list-ii tempo]))}, :name rhythm-of-time.sequencer/advancer, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/sequencer.cljs", :end-column 15, :method-params ([stages frequency-list-i frequency-list-ii tempo]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 4, :fn-var true, :arglists (quote ([stages frequency-list-i frequency-list-ii tempo]))}}, :require-macros {q quil.core, quil.core quil.core}, :cljs.analyzer/constants {:seen #{:fn :stages :frequencies-i-2 :stage :track2 :frequencies-i-1 :frequency-i :audio1 :frequencies-ii-2 :rgb :settings :update :size :setup :middleware :host :audio2 :stages2 :track1 :host-id :no-start :frequency-ii :audio :draw :frequencies-ii-1}, :order [:rgb :stage :frequency-i :frequency-ii :audio :stages :stages2 :frequencies-i-1 :frequencies-i-2 :frequencies-ii-1 :frequencies-ii-2 :audio1 :audio2 :track1 :track2 :host :settings :update :size :setup :middleware :draw :no-start :fn :host-id]}, :doc nil}