{:name rhythm-of-time.quil-js-api, :doc nil, :excludes #{}, :use-macros nil, :require-macros {q quil.core, quil.core quil.core}, :uses nil, :requires {q quil.core, quil.core quil.core, cntrl rhythm-of-time.controls, rhythm-of-time.controls rhythm-of-time.controls}, :imports nil, :defs {state-js {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 5, :column 16, :end-line 5, :end-column 24, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.quil-js-api/state-js, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 24, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, reset-state {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 9, :column 16, :end-line 9, :end-column 27, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.quil-js-api/reset-state, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 27, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, stop-loop! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 13, :column 16, :end-line 13, :end-column 26, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.quil-js-api/stop-loop!, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 26, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, stop-loop {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 17, :column 16, :end-line 17, :end-column 25, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.quil-js-api/stop-loop, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 25, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, start-loop! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 20, :column 16, :end-line 20, :end-column 27, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.quil-js-api/start-loop!, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 27, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, start-loop {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 23, :column 16, :end-line 23, :end-column 26, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.quil-js-api/start-loop, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 26, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, hide-canvas-controls {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/quil_js_api.cljs", :line 26, :column 16, :end-line 26, :end-column 36, :export true, :arglists (quote ([]))}, :name rhythm-of-time.quil-js-api/hide-canvas-controls, :variadic false, :file "src/rhythm_of_time/quil_js_api.cljs", :end-column 36, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}}