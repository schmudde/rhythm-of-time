{:use-macros {sel1 dommy.core, sel dommy.core}, :excludes #{}, :name rhythm-of-time.controls, :imports nil, :requires {dommy dommy.core, dommy.core dommy.core, js-api rhythm-of-time.quil-js-api, rhythm-of-time.quil-js-api rhythm-of-time.quil-js-api}, :uses nil, :defs {plus {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([x y]))}, :name rhythm-of-time.controls/plus, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, tempo-update {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :line 7, :column 7, :end-line 7, :end-column 19, :arglists (quote ([tempo-slider]))}, :name rhythm-of-time.controls/tempo-update, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :end-column 19, :method-params ([tempo-slider]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tempo-slider]))}, tempo-defaults! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :line 15, :column 7, :end-line 15, :end-column 22, :arglists (quote ([tempo-slider]))}, :name rhythm-of-time.controls/tempo-defaults!, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :end-column 22, :method-params ([tempo-slider]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tempo-slider]))}, reset-sequencer {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :line 21, :column 16, :end-line 21, :end-column 31, :export true, :arglists (quote ([name]))}, :name rhythm-of-time.controls/reset-sequencer, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :end-column 31, :method-params ([name]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([name]))}, toggle-sequencer! {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :line 25, :column 7, :end-line 25, :end-column 24, :arglists (quote ([e]))}, :name rhythm-of-time.controls/toggle-sequencer!, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :end-column 24, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, melody {:protocol-inline nil, :meta {:file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :line 32, :column 7, :end-line 32, :end-column 13, :arglists (quote ([melody-select]))}, :name rhythm-of-time.controls/melody, :variadic false, :file "/Users/schmudde/work/code/rhythm-of-time/src/rhythm_of_time/controls.cljs", :end-column 13, :method-params ([melody-select]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([melody-select]))}}, :require-macros {dommy dommy.core, dommy.core dommy.core}, :cljs.analyzer/constants {:seen #{:click :change}, :order [:click :change]}, :doc nil}